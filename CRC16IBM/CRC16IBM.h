/**
* @file CRC16IBM.h
* @author Иванщина А.К.
* @version 1.0
* @brief Вычисление значения контрольной суммы CRC-16-IBM
* @date 21.05.2021
* @copyright ИБСТ ПГУ
*/
#include <fstream>
#include <iostream>
#include <string>
#include <stdint.h>
#include "Help.h"
using namespace std;
/**
 * @class CRC16IBM
 * @brief Описание класса CRC16IBM.
 * @details В данном классе происходит вычисления CRC для определенных файлов.
 */
class CRC16IBM
{
private:
    string filename; ///< Файл из которого будут читаться данные.
    int filling; ///< Задается начальное значение при вычисление.
    /**
    * @brief Метод CRC16IBMcalc
    * @param buf буфер в виде массива байтов.
    * @param len длина массива.
    * @details Происходит вычисление контрольной суммы на основе полиномиальной арифметики.
    * Используется полином 0xA001=x^16+x^15+x^2+1.
    * Алгоритм расчёта:
    * 1) В регистр заносится начальное значение.
    * 2) Задается нужный полином, в данном случае это 0xA001
    * 3) Запускается цикл, по количеству байт в сообщении(сообщение всегда идет без полученного CRC, потому что расчитывается заново всегда)
    * 3-1) В цикле: делится регистр через xor на выбранный байт сообщения(начиная с первого)
    * 3-2) В цикле: запускается вложенный цикл на 8 шагов(по количеству бит в байте),
    * в котором узнается, является ли старший бит единицей:
    * Если является — сдвигается регистр вправо на один бит, и делится по xor на полином
    * Если не является единицей — просто сдвигается регистр вправо.
    *
    * По окончанию вложенного цикла происходит возврат к основному циклу, в котором последовательность повторяется для следующего байта в сообщении.
    *
    * @return Возвращает вычисленное значение контрольной суммы.
     */
    unsigned int CRC16IBMcalc(unsigned char *buf, unsigned long len);
public:
    CRC16IBM() = delete; ///< Запрещающий конструктор без параметров.
    /**
    * @brief Конструктор CRC16IBM
    * @details В данном конструкторе инициализируется
    * начальное заполнение при вычисление контрольной суммы.
    */
    CRC16IBM(string file, int filling);
    /**
    * @brief Метод calculateCRC
    * @details Метод, в котором создается буфер, читается содержимое файла и вызывается функция вычисления.
    */
    unsigned int calculateCRC();
};
    /**
     * @class crc_error
     * @brief Описание класса crc_error
     * @file CRC16IBM.h
     * @details Класс создан для обработки ошибок,
     * которые могут возникнуть при открытии файлов, при работе с ними.
     */

    class crc_error: public std::invalid_argument
    {
    public:
        /**
           * @brief Принимает на вход строку, вызывает исключение
           * @param what_arg
           */
        explicit crc_error (const std::string& what_arg):
            std::invalid_argument(what_arg) {}
        /**
        * @brief Принимает на вход си строку, вызывает исключение
        * @param what_arg
        */
        explicit crc_error (const char* what_arg):
            std::invalid_argument(what_arg) {}
    };
